cmake_minimum_required(VERSION 3.5)

project(ovpncli)
#set(CMAKE_CXX_STANDARD 14)

#cmake -DCMAKE_GENERATOR_PLATFORM=x64
#cmake -G "Visual Studio 16 2019" -A Win32
#cmake -G "Visual Studio 16 2019" -A x64
#wininet.lib
#Wtsapi32.lib
#setupapi.lib
#rpcrt4.lib

list(APPEND CMAKE_PREFIX_PATH "d:/library/vcpkg/installed/x64-windows/")
#list(APPEND CMAKE_PREFIX_PATH "d:/library/vcpkg/installed/x86-windows/")
set(OVPN3_DIR "D:/library/openvpn3") 
set(CMAKE_MODULE_PATH "${OVPN3_DIR}/cmake")
message("CMAKE_MODULE_PATH - ${CMAKE_MODULE_PATH}")
message("CURRENT_SOURCE_DIR - ${CMAKE_CURRENT_SOURCE_DIR}")

#set(VCPKG_INCLUDE_DIR "D:/library/vcpkg/installed/x64-windows/include")
#include_directories(${OVPN3_DIR})
#include_directories(${VCPKG_INCLUDE_DIR})

#set(VCPKG_INCLUDE_DIR "D:/library/vcpkg/installed/x64-windows/include")
#option(WIN32 "Build ovpncli variant with null tun" ON)

include(FindLZ4)
include(findcoredeps)  

#option(CLI_NULLTUN "Build ovpncli variant with null tun" OFF)
#option(CLI_DCO "Build ovpncli variant with Data Channel Offload (DCO) feature" OFF)
#set(KOVPN_SOURCE "${CORE_DIR}/../kovpn" CACHE PATH "ovpn-dco kernel module source tree")

add_executable(ovpncli cli.cpp)
add_core_dependencies(ovpncli)

#if (${CLI_NULLTUN})
#    add_executable(ovpnclinull cli.cpp)
#    add_core_dependencies(ovpnclinull)
#    target_compile_definitions(ovpnclinull PRIVATE -DOPENVPN_FORCE_TUN_NULL)
#endif ()


#if (${CLI_DCO})
#    add_executable(ovpnclidco cli.cpp)
#    add_core_dependencies(ovpnclidco)
#    target_include_directories(ovpnclidco PRIVATE ${KOVPN_SOURCE})
#    target_compile_definitions(ovpnclidco PRIVATE -DENABLE_DCO)
#endif ()

file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/build.bat
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR})